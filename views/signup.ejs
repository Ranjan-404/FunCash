<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sign</title>
    <link rel="stylesheet" href="style.css">
    <style>
        .wrap2{ 
            display: flex;
        }
        form{
            gap: 20px;
        }
        .wrap3{
            display: flex;
            align-items: center;
            gap: 5px;
            display: none;
            
        }

        #check{
            background-color: white;
            color: green;
            padding: 5px;

        }
        #invalid{
            background-color: white;
            color: #dc0e0e;
            padding: 5px;

        }
        
    </style>
</head>
<body>
    <svg style="display: none">
        <symbol id="icon.spinner">
          <g>
            <circle cx="12" cy="12" r="9.5" fill="none" stroke="currentColor" stroke-width="3" stroke-linecap="round"><animate attributeName="stroke-dasharray" dur="1.5s" calcMode="spline" values="0 150;42 150;42 150;42 150" keyTimes="0;0.475;0.95;1" keySplines="0.42,0,0.58,1;0.42,0,0.58,1;0.42,0,0.58,1" repeatCount="indefinite"/><animate attributeName="stroke-dashoffset" dur="1.5s" calcMode="spline" values="0;-16;-59;-59" keyTimes="0;0.475;0.95;1" keySplines="0.42,0,0.58,1;0.42,0,0.58,1;0.42,0,0.58,1" repeatCount="indefinite"/></circle><animateTransform attributeName="transform" type="rotate" dur="2s" values="0 12 12;360 12 12" repeatCount="indefinite"/>
          </g>
        </svg>
      </svg>
    <main>
        <section id="loginSection">
            <h1 >Sign Up</h1>
         <form method="post" action="/signup" >
            <div class="wrap">
                <span id="error"></span>
            </div>
            <div id="running" class="wrap3">
                <p data-ref id="r"></p>
                <p data-ref> Checking...</p>
               </div>
                   
             <div class="wrap2">
                <i class="material-icons">confirmation_number</i>
                <input  id="code" name="code" type="number" placeholder="Enter Code" >
             </div>
             <div class="wrap2">
                <i class="material-icons">person</i>
                <input name="username" type="text" placeholder="Enter Name" required>
             </div>
             <div class="wrap2">
                <i class="material-icons">email</i>
                <input name="email" autocomplete="true" type="email" placeholder="Enter email" required>
             </div>
          
          
           <div class="wrap2">
            <i class="material-icons">lock</i>
            <input type="password" placeholder="Enter Password" required>
           </div>
           <div class="wrap2">
            <i class="material-icons">lock</i>
            <input name="password" type="password" placeholder="Confirm Password" required>
           </div>
            <div class="wrap">
                <button type ='submit'>Sign Up</button>
            </div>
            <div style="margin-bottom: 10px;" class="wrap">
            <span>already have account? <a href="/">Login</a></span>
            </div>
         </form>
        </section>
        <section id="imgSection">
            <img src="login.svg"alt="">
        </section>
    </main>
   
      
    <script>
        let refral = document.getElementById('refral')
        const spinner = '<svg aria-hidden="true" width="24" height="24" viewBox="0 0 24 24"><use href="#icon.spinner"></use></svg>'
        let code = document.getElementById('code')
        let dataRef = document.querySelectorAll('[data-ref]')
        let passwords = document.querySelectorAll(`input[type='password']`)
        let r = document.getElementById('r')
r.innerHTML = spinner
let form = document.querySelector('form')

        let running = document.getElementById('running')
code.addEventListener('input', (event) => {
  const input = event.target.value;

  const maxLength = 6;
  const sanitizedInput = input.replace(/\D/g, '');
  const truncatedInput = sanitizedInput.slice(0, maxLength);
  code.value = truncatedInput;

});




form.addEventListener("submit",(e)=>{
    if(passwords[0].vlaue !== passwords[1].vlaue){
e.preventDefault()
setError("Both password are not matching" ,true)
    }
})
code.onpaste = ()=>{
    sendDataToServer()
    running.style.display = "flex"
} 
code.oninput = ()=>{
    sendDataToServer()
    if(code.value ===""){
    running.style.display = "none"
    }else{
running.style.display = "flex"
    }
} 
 
        function sendDataToServer(){
    const formData = new FormData(form);
  const params = new URLSearchParams(formData)
    fetch("/checkcode", {
    method: "POST",
    body: params,
  })
    .then((response) => {
      if(response.ok){
      dataRef[0].innerHTML = `<i id ="check" class="material-icons">check_circle</i>` 
      dataRef[0].style.color = 'green'
      dataRef[1].style.color = 'green'
     

      }else{
        dataRef[0].innerHTML = spinner
        dataRef[1].style.color = "black"
        dataRef[1].innerHTML = 'Checking...'
      }
      if(response.status === 409){
        dataRef[0].innerHTML = `<i id ="invalid" class="material-icons">cancel</i>` 
        dataRef[1].style.color = "red"
        dataRef[1].innerHTML = 'Invalid code'
       
      }
     
      return response.json(); 
    })
    .then((data) => { 
   if(data.message ==="valid"){
    dataRef[1].innerHTML = `Applied from ${data.user.username}`

   }
    })
    .catch((error) => {
      setError(error,true)
    });
  }

 

 
  function setError(err,Error){
    let errr = document.getElementById('error')
   errr.innerHTML = err
    if(Error){
      errr.style.color = "red" 
    }else{
      errr.style.color = "green"
    }
  }

    </script>
     <% if (locals.code) { %>
        <script>
          const codeInput = document.getElementById('code');
          codeInput.value = `<%= code %>`;
          sendDataToServer()
          running.style.display = "flex"
        </script>
      <% } %>
</body>
</html>
